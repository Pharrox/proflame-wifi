name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4.1.0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox and any other packages
        run: pip install tox
      - name: Run Tox
        run: tox -e py
  
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4.1.0
      - name: Semantic Release
        id: semantic_release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 23.0.2
      - name: Make Release Body
        shell: bash
        if: ${{ steps.semantic_release.outputs.new_release_git_tag }}
        env:
          PREV_RELEASE: ${{ steps.semantic_release.outputs.last_release_git_tag }}
          CUR_RELEASE: ${{ steps.semantic_release.outputs.new_release_git_tag }}
        run: |
          echo 'Changes in this Release' > release-body.txt
          git log --pretty=format:%s "${PREV_RELEASE}..${CUR_RELEASE}" | sed 's/^/ - /' >> release-body.txt
      - name: "Adjust version number"
        shell: "bash"
        if: ${{ steps.semantic_release.outputs.new_release_git_tag }}
        env:
          CUR_VERSION: ${{ steps.semantic_release.outputs.new_release_version }}
          TARGET: ${{ github.workspace }}/src/proflame_wifi/__init__.py
        run: sed -ri "s/__version__\s*=\s[\"'][^\"']+[\"']/__version__ = '${NEW_VERSION}'/" "${TARGET}"
      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: ${{ steps.semantic_release.outputs.new_release_git_tag }}
        with:
          body_path: release-body.txt
          draft: false
          name: Release ${{ steps.semantic_release.outputs.new_release_git_tag }}
          tag_name: ${{ steps.semantic_release.outputs.new_release_git_tag }}
          token: ${{ secrets.RELEASE_TOKEN }}
